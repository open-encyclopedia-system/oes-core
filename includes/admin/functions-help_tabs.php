<?php

/**
 * Create a help tab on OES visibility page.
 * @param $screen
 * @return void
 */
function oes_settings_page_oes_visibility_help_tabs($screen): void
{
    $screen->add_help_tab([
        'id' => 'oes_writing',
        'title' => 'Writing',
        'content' => '<p>' .
            __('This is a settings page generated by the OES Core Plugin where you can administrate settings for OES features.', 'oes') .
            '</p>',
    ]);

    $screen->add_help_tab([
        'id' => 'oes_writing_columns',
        'title' => 'Columns',
        'content' => '<p>' .
            __('You can add or remove columns for the list views of post objects in the admin area with the OES ' .
                'feature Admin Columns and display information that helps you to administrate and organizing your ' .
                'post objects.', 'oes') .
            '</p>',
    ]);

    $screen->add_help_tab([
        'id' => 'oes_writing_container',
        'title' => 'Container',
        'content' => '<p>' .
            __('The OES feature Container allows you to organize admin menu items into a new top menu with sub ' .
                'menu items and to display currently worked on post objects. The container have to be initialized ' .
                'inside your OES project plugin to be available for configuration, see user manual for more information.', 'oes') .
            '<ul>' .
            '<li><b>Name</b>: ' . __('Name of the container as displayed in menu', 'oes') . '</li>' .
            '<li><b>Position</b>: ' . __('Change the position in the editorial layer menu. Default ' .
                'on empty or 0 is between 26 and 59.', 'oes') . '</li>' .
            '<li><b>Icon</b>: ' . __('The menu icon. Valid options are: "default", "parent", "second", "admin" or ' .
                'a path.', 'oes') . '</li>' .
            '<li><b>Elements</b>: ' . __('Elements included as submenu in this container.', 'oes') . '</li>' .
            '<li><b>Info Page Elements</b>: ' . __('Elements displayed on an info page. Only elements that are set ' .
                'in the "Elements" option can be displayed.', 'oes') . '</li>' .
            '<li><b>Info Page Text</b>: ' . __('The menu name of the info page (if info page elements are set).', 'oes') . '</li>' .
            '<li><b>Hide</b>: ' . __('Hide generated container in menu.', 'oes') . '</li>' .
            '</ul>' .
            '</p>',
    ]);

    $screen->add_help_tab([
        'id' => 'oes_admin_visibility',
        'title' => 'Admin',
        'content' => '<p>' .
            __('This is only configurable for admins.', 'oes') .
            '<ul>' .
            '<li><b>Show OES Objects</b>: ' . __('Show the post type "OES Objects". This post type stores the post type ' .
                'configurations.', 'oes') . '</li>' .
            '<li><b>Hide Versioning Tab</b>: ' . __('Hide the post fields that hold version information.', 'oes') . '</li>' .
            '</ul>' .
            '</p>'
    ]);

    $screen->set_help_sidebar('<p><strong> See also </strong></p><p><a href="' . admin_url('options-writing.php') .'">WordPress writing settings</a></p>');
}

/**
 * Create a help tab on OES data model page.
 * @param $screen
 * @return void
 */
function oes_settings_page_oes_settings_reading_help_tabs($screen): void
{
    global $oes;

    $screen->set_help_sidebar('<p><strong> See also </strong></p><p><a href="' . admin_url('options-reading.php') .'">WordPress reading settings</a></p>');

    $screen->add_help_tab([
        'id' => 'oes_reading',
        'title' => 'Reading',
        'content' => '<p>' .
            sprintf(__('The reading settings manage the display and behaviour of the frontend (your website as ' .
                'displayed by the selected theme, learn more about themes in the %sWordPress manual%s). ' .
                'Most of the settings affect only the OES theme or a derivative of it and will have no impact ' .
                'on other themes. ', 'oes'),
                '<a href="https://developer.wordpress.org/themes/getting-started/what-is-a-theme/" target="_blank">',
                '</a>') .
            '</p><p>' .
            __('A post object can be displayed according to its post type on the frontend as a <b>single page</b>, as a ' .
                '<b>search result</b> or as ' .
                'part of a WordPress <b>archive</b> listing all posts of a specific post type. ' .
                'For instance, the post type “article” ' .
                'can be displayed in full on one page (the single view), '.
                'can be referred to as the result of a search (the search view), or can be listed in an ' .
                'overview of all articles of a reference work (the archive view).', 'oes') .
            '</p>',
    ]);

    $screen->add_help_tab([
        'id' => 'oes_reading_date',
        'title' => 'Date Format',
        'content' => '<p>' .
            __('The OES feature <b>Date Format</b> allows you to define the date format which will be applied ' .
                'to all displayed dates.', 'oes') .
            '</p>'
    ]);

    $screen->add_help_tab([
        'id' => 'oes_reading_index',
        'title' => 'Index',
        'content' => '<p>' .
            __('The OES feature <b>Index</b> (Register) allows you to ' .
                'define an index page on which post types will be displayed that are linked to the main ' .
                'post type (usually a type of article). The index post types will include a display of their ' .
                'connection within the encyclopaedia on the frontend single display.', 'oes') .
            '</p><p>' .
            '<ul>' .
            '<li><b>Page Slug</b>: ' . sprintf(__('Slug for the Index Page (relative to %s/).', 'oes'), get_site_url()) . '</li>' .
            '<li><b>Considered Object</b>: ' . __('Considered Object for Index (Nachweis)).', 'oes') . '</li>' .
            '<li><b>Objects</b>: ' . __('Objects on the Index Page.', 'oes') . '</li>' .
            '<li><b>Archive Filter</b>: ' . __('Elements that will be considered for the archive filter.', 'oes') . '</li>' .
            '<li><b>Label</b>: ' . __('Label of the Index Page.', 'oes') . '</li>' .
            '</ul>' .
            '</p>',
    ]);

    $screen->add_help_tab([
        'id' => 'oes_reading_languages',
        'title' => 'Languages',
        'content' => '<p>' .
            __('If you are using an OES theme you can define labels for the templates that will be rendered ' .
                'on certain part of the pages or for specific languages if you are using the OES feature ' .
                '<b>Bilingualism</b>. Most of the labels are defined by your OES project plugin.', 'oes') .
            '</p><p>' .
            __('OES can be displayed in different languages. ' .
                'Navigation elements will be displayed in the chosen language. Other elements might be ' .
                'displayed in a different language depending on implemented language switches ' .
                '(e.g. language switch for articles). ' .
                'The <strong>abbreviation</strong> is used for e.g. the language switch. ' .
                'Choose a <strong>date locale</strong> for the date display. Default is "en_BE" for british ' .
                'date format. Most used locale codes are: "de_DE" (German), "en_BE" (British), ' .
                '"en_US" (US) and "fr_FR" (French). You can look up further locale codes online, but ' .
                'unfortunately, there is no list for all php language locale codes provided by an ' .
                'official source.', 'oes') .
            '</p>',
    ]);

    $screen->add_help_tab([
        'id' => 'oes_reading_media',
        'title' => 'Media',
        'content' => '<p>' .
            __('The OES feature <b>Media</b> allows you to define the display behaviour of images in the ' .
                'frontend. This applies only to media displayed in OES blocks (e.g. "Featured Image").', 'oes') .
            '</p><p>' .
            '<ul>' .
            '<li><b>Title Field</b>: ' . __('The field that is used as title', 'oes') . '</li>' .
            '<li><b>Credit Label</b>: ' . __('The credit label is displayed beneath the image ' .
                '(split language dependent label by semicolon, e.g. "Credit;Attribution")', 'oes') . '</li>' .
            '<li><b>Credit Field</b>: ' . __('The credit field and is displayed after the credit label', 'oes') . '</li>' .
            '<li><b>Show in Panel</b>: ' . __('Fields that are shown in panel', 'oes') . '</li>' .
            '</ul>' .
            '</p>'
    ]);

    $screen->add_help_tab([
        'id' => 'oes_reading_search',
        'title' => 'Search',
        'content' => '<p>' .
            __('The OES feature <b>Search</b> allows you to define which parts of the encyclopdia can be ' .
                'searched and how they are to be displayed.', 'oes') .
            '</p><p>' .
            '<ul>' .
            '<li><b>Maximum paragraphs in search result</b>: ' . __('The maximum of paragraphs when displaying the ' .
                'preview in search results', 'oes') . '</li>' .
            '<li><b>Order of searched objects</b>: ' . __('The order of the post types and taxonomies in which the ' .
                'results are output', 'oes') . '</li>' .
            '<li><b>Type Filter Label</b>: ' . __('Label of the type filter.', 'oes') . '</li>' .
            '<li><b>Archive Filter</b>: ' . __('Elements that will be considered for the archive filter.', 'oes') . '</li>' .
            '<li><b>Label</b>: ' . __('Label of the Index Page.', 'oes') . '</li>' .
            '</ul>' .
            '</p>'
    ]);

    if($oes->block_theme){
        return;
    }

    $screen->add_help_tab([
        'id' => 'oes_reading_colors',
        'title' => 'Colors',
        'content' => '<p>' .
            __('The OES feature <b>Colors</b> allows you to overwrite colors for the OES theme. The colors must be in HEX format.', 'oes') .
            '</p>'
    ]);

    $screen->add_help_tab([
        'id' => 'oes_reading_logo',
        'title' => 'Logos',
        'content' => '<p>' .
            __('The OES feature <b>Logo</b> allows you to add logos for the header menu as well as favicons for ' .
                'your website.' . '<br>' .
                'The <b>favicon</b> is also known as a shortcut icon, website icon, tab icon, URL icon, or bookmark icon. ' .
                'Browsers that provide favicon support typically display a page\'s favicon in the browser\'s ' .
                'address bar (sometimes in the history as well) and next to the page\'s name in a list of bookmarks.',
                'oes') .
            '</p><p>' .
            '<ul>' .
            '<li><b>Header Logo</b>: ' . __('The logo will be displayed inside your header on the left ' .
                'side and will redirect to the landing page ("Home Button").', 'oes') . '</li>' .
            '<li><b>Header Logo (Print)</b>: ' . __('The logo will be displayed on top of the printed page.', 'oes') . '</li>' .
            '<li><b>Favicon</b>: ' . __('The icon is used as standard icon and can be accessed by older browsers.', 'oes') . '</li>' .
            '<li><b>Favicon (16x16)</b>: ' . __('The icon is used by most modern browsers.', 'oes') . '</li>' .
            '<li><b>Favicon (32x32)</b>: ' . __('The icon is used by Windows (e.g. taskbar).', 'oes') . '</li>' .
            '<li><b>Favicon (apple touch)</b>: ' . __('The icon is used by iOS.', 'oes') . '</li>' .
            '</ul>' .
            '</p>'
    ]);
}

/**
 * Create a help tab on OES data model page.
 * @param $screen
 * @return void
 */
function oes_settings_page_oes_settings_schema_help_tabs($screen): void
{
    if(!in_array(($_GET['type'] ?? 'oes'), ['oes', 'oes_single', 'oes_archive'])){
        return;
    }

    $screen->add_help_tab([
        'id' => 'oes_schema_help',
        'title' => 'Schema',
        'content' => '<p>' .
            __('The OES schema defines the data schema and its representation of text objects, their properties ' .
                'and relationships ' .
                'between objects. The defined schema option for an object are used for the frontend representation.',
                'oes') .
            '</p>',
    ]);
    $screen->add_help_tab([
        'id' => 'oes_schema_types',
        'title' => 'Types',
        'content' => '<p>' .
            __('The OES schema is divided into different object types: <b>Content</b> are post objects with ' .
                'scientific texts ' .
                'whose text bodies are enriched and classified by metadata. <b>Contributors</b> are post object types ' .
                'that represent the authorship of articles. <b>Index</b> elements are post objects that form the ' .
                'index of the collected articles. Other post objects that are only used for the searchability ' .
                'or structuring of other objects are referred to as <b>internal</b> elements.', 'oes') .
            '</p>',
    ]);
    $screen->add_help_tab([
        'id' => 'oes_schema_single',
        'title' => 'Single',
        'content' => '<p>' .
            __('A single post object can be displayed as a single page.', 'oes') .
            '</p><p>' .
            __('You can choose the field that will be displayed as title of a post object with the OES feature ' .
                '<b>Titles</b> (The field to be displayed as title on the single page).', 'oes') . '<br>' .
            __('The single view of a post object includes a table of metadata. You can define which post data ' .
                'is to be considered as metadata in the OES feature <b>Metadata</b>.', 'oes') .
            '</p><p>' .
            '<ul>' .
            '<li><b>Title for single display</b>: ' . __('The field to be displayed as title on the single page', 'oes') . '</li>' .
            '<li><b>Metadata</b>: ' . __('The fields to be considered for metadata', 'oes') . '</li>' .
            '<li><b>Display archive as single page list</b>: ' . __('Display the archive as list, all posts on one page. ' .
                'Post type has no single pages (eg. glossary)', 'oes') . '</li>' .
            '<li><b>Archive Data</b>: ' . __('Additional information on archive list view.', 'oes') . '</li>' .
            '<li><b>Redirect</b>: ' . __('Redirect the term to an archive page.', 'oes') . '</li>' .
            '</ul>' .
            '</p>',
    ]);
    $screen->add_help_tab([
        'id' => 'oes_schema_archive',
        'title' => 'Archive',
        'content' => '<p>' .
            __('All post objects of an object type can be displayed as an archive on a single page.', 'oes') .
            '</p><p>' .
            __('You can choose the field that will be displayed as title of a post object with the OES feature ' .
                '<b>Titles</b>. You can also choose which field will be used for sorting the list of post objects ' .
                'alphabetically.', 'oes') . '<br>' .
            __('The post type parameter <b>Has Archive</b> enables the archive view inside the frontend layer.',
                'oes') . '<br>' .
            __('When the OES feature <b>Display archive as list</b> is enabled the archive will not be displayed ' .
                'as list of posts linking to the single view but instead as list of all posts including the post ' .
                'content without the single view option.', 'oes') . '<br>' .
            __('You can define data to be included on the archive page in a ' .
                'dropdown table in the OES feature <b>Archive</b>. The OES feature <b>Archive Filter</b> ' .
                'enables considered facet filters for the archive page.', 'oes') .
            '</p><p>' .
            '<ul>' .
            '<li><b>Title for list display</b>: ' . __('The field to be displayed as title on archive pages', 'oes') . '</li>' .
            '<li><b>Sorting title for list display</b>: ' . __('The field to be sorted after on archive pages', 'oes') . '</li>' .
            '<li><b>Display archive as single page list</b>: ' . __('Display the archive as list, all posts on one page. ' .
                'Post type has no single pages (eg. glossary)', 'oes') . '</li>' .
            '<li><b>Archive Data</b>: ' . __('Additional information on archive list view.', 'oes') . '</li>' .
            '<li><b>Archive Filter</b>: ' . __('Elements that will be considered for the archive filter.', 'oes') . '</li>' .
            '</ul>' .
            '</p>',
    ]);
}

/**
 * Create a help tab on OES data model page.
 * @param $screen
 * @return void
 */
function oes_settings_page_oes_settings_labels_help_tabs($screen): void
{
    $screen->add_help_tab([
        'id' => 'oes_labels',
        'title' => 'Labels',
        'content' => '<p>' .
            __('If you are using an OES theme you can define labels for the templates that will be rendered ' .
                'on certain part of the pages or for specific languages if you are using the OES feature ' .
                '<b>Bilingualism</b>. Most of the labels are defined by your OES project plugin.', 'oes') .
            '</p><p>' .
            __('The following labels will affect the labels of custom post types, custom taxonomies and their ' .
                'fields inside the frontend layer. Some labels will overwrite the labels defined for the editorial ' .
                'layer (admin labels).',
                'oes') .
            '</p>'
    ]);

}

/**
 * Create a help tab on OES data model page.
 * @oesDevelopment Review, link to manual etc.
 * @param $screen
 * @return void
 */
function oes_settings_page_oes_settings_lod_help_tabs($screen): void
{
    $screen->add_help_tab([
        'id' => 'oes_lod_help',
        'title' => 'LOD',
        'content' => '<p>' .
            __('Linked open data (LOD) describes structured data that is interlinked with other data and is ' .
                'used through semantic queries. The OES feature <b>Linked Open Data</b> enables the search in ' .
                'databases, e.g. authority files such as GND and GeoNames, that store LOD data.', 'oes') .
            '</p>',
    ]);
}

/**
 * Create a help tab on OES data model page.
 * @param $screen
 * @return void
 */
function oes_tools_page_oes_tools_model_help_tabs($screen): void
{

    $screen->add_help_tab([
        'id' => 'oes_model_help',
        'title' => __('OES Model Data', 'oes'),
        'content' => wp_kses_post('
        <p><strong>Overview:</strong></p>
        <p>The OES <em>Data Model</em> feature allows you to configure the appearance and behavior of the objects defined in your OES project plugin.</p>

        <p>These objects represent different content types that include fields, relationships, and text editor options. In WordPress terminology, these are called <strong>custom post types</strong> and <strong>custom taxonomies</strong>. An instance of a post type is called a <em>post</em>, while an instance of a taxonomy is called a <em>term</em>.</p>

        <p>For a full explanation of configuration options, consult the official WordPress documentation for 
        <a href="https://developer.wordpress.org/reference/functions/register_post_type/" target="_blank">custom post types</a> and 
        <a href="https://developer.wordpress.org/reference/functions/register_taxonomy/" target="_blank">custom taxonomies</a>. Note that not all options are available through the OES interface — some advanced settings require editing the configuration directly in your project plugin.</p>

        <p><strong>Important:</strong> These configurations do not alter your data. OES adheres to WordPress\'s principle of preserving content integrity. The settings only control how the data is presented or made available in the editorial interface. For example, if you add a taxonomy or enable the block editor, the data remains in the database until it is explicitly removed (e.g., by deleting a field value, relation, or post).</p>

        <p>If no post types or taxonomies appear in the list below, check your project\'s data model configuration or review the OES Admin settings.</p>
    ')
    ]);

    $screen->set_help_sidebar(wp_kses_post('
    <p><strong>' . __('See also:', 'oes') . '</strong></p>
    <p><a href="https://manual.open-encyclopedia-system.org/book/datamodel-factory/" target="_blank">' . __('OES Manual – Data Model & Factory', 'oes') . '</a></p>
'));
}

/**
 * Create a help tab on OES cache page.
 * @param $screen
 * @return void
 */
function oes_tools_page_oes_tools_cache_help_tabs($screen): void
{

    $screen->add_help_tab([
        'id' => 'oes_cache_help',
        'title' => 'Overview',
        'content' => '<p>' .
            __('The OES caching feature provides a robust caching system for optimizing archive and ' .
                'index views within OES. It leverages WordPress transients to temporarily store data, improving ' .
                'performance by reducing the need for repeated database queries or heavy processing on each page ' .
                'load.', 'oes') .
            '</p>' .
            '<p>' .
            __('Due to the size limitations of WordPress transients—typically around 3KB when stored in the ' .
                'database—this module automatically splits larger datasets into smaller chunks. These chunks are ' .
                'saved as individual transient entries. When retrieving cached data, the module seamlessly ' .
                'reassembles these parts to restore the full dataset.', 'oes') .
            '</p>'
    ]);
    $screen->add_help_tab([
        'id'      => 'oes_cache_transients',
        'title'   => __('Transients', 'oes'),
        'content' => '<p>' .
            __('Transients in WordPress are a way to temporarily cache data to improve performance. Each transient ' .
                'has a unique key, a value (your data), and an optional expiration time. ' .
                'If an object cache (like Redis) is available, transients are stored in memory. Otherwise, they are ' .
                'stored in the wp_options table using special keys. Expired transients are removed when accessed or ' .
                'via periodic cleanups. You can also manually delete them using this tool. Transients stored in the ' .
                'database are limited to around 3–4 KB per entry. Large data is chunked into multiple transients.',
                'oes') .
            '</p>'
    ]);
    $screen->add_help_tab([
        'id' => 'oes_cache_invalidation',
        'title' => 'Invalidation',
        'content' => '<p>' .
            __('Cache invalidation is handled automatically. Whenever a post is saved, deleted, or moved to the ' .
                'trash, the system detects the relevant post type and language, then clears all associated archive ' .
                'and index caches. This ensures users always receive the most up-to-date data, without requiring ' .
                'manual intervention. The cache is regenerated when the first user triggers the corresponding ' .
                'archive page.', 'oes') .
            '</p>' .
            '<p>' .
            __('In Development: definition of smart expiration rules. Developers can choose to let cache entries ' .
                'expire automatically. This is particularly useful for scheduling cache ' .
                'refreshes during low-traffic periods, helping maintain both performance and freshness of content.',
                'oes') .
            '</p>'
    ]);
}

/**
 * Create a help tab on OES manual page.
 * @param $screen
 * @return void
 */
function toplevel_page_admin_manual_help_tabs($screen): void
{

    $screen->add_help_tab([
        'id' => 'oes_manual_help',
        'title' => 'Overview',
        'content' => '<p>' . __('This manual serves as a living resource curated by the project team — meaning: ' .
                'by you! Here you can add and contribute to e. g.:', 'oes') . '</p>' .
            '<ul>' .
            '<li>' . __('Editorial Notes & Hints — insights on tone, style, exceptions, and edge cases', 'oes') . '</li>' .
            '<li>' . __('Frequently Asked Questions (FAQs) — quick answers to common questions that arise during project work', 'oes') . '</li>' .
            '<li>' . __('Author’s Guide — practical guidance tailored to writing for this specific project', 'oes') . '</li>' .
            '<li>' . __('Styling Tips — project-specific visual patterns or formatting recommendations', 'oes') . '</li>' .
            '<li>' . __('Development Requests — a lightweight way to log content-related tasks or blockers that need developer support', 'oes') . '</li>' .
            '</ul>' .
            '<p>' .
            __('This manual is built for flexibility and collaboration. If something\'s missing or unclear, ' .
                'you\'re encouraged to improve it — whether it’s correcting a typo, suggesting a better example, ' .
                'or documenting a new editorial quirk.', 'oes') . '</p>'
    ]);
    $screen->add_help_tab([
        'id' => 'oes_remarks_create',
        'title' => 'Managing Entries',
        'content' => '<p>' .
            __('You can add or modify content by selecting a page from the Table of Contents on the right ' .
                'side and using the edit icon, by selecting a page from the ') .
            '<a href="' . admin_url('edit.php?post_type=oes_manual_entry') . '">' . __('list', 'oes') . '</a>' .
            __(' or by using the search function.', 'oes') . '</p>',
    ]);

    $screen->set_help_sidebar(
        sprintf('<p><strong>%s</strong></p><p><a href="https://manual.open-encyclopedia-system.org/">%s</a></p>',
            __('See', 'oes'),
            __('OES Manual', 'oes')
        ));
}

/**
 * Create a help tab on OES remark page.
 * @param $screen
 * @return void
 */
function toplevel_page_admin_oes_remarks_help_tabs($screen): void
{

    $screen->add_help_tab([
        'id' => 'oes_remarks_help',
        'title' => 'OES Remarks',
        'content' => '<p>OES Remarks provides an overview of all internal Comment fields across your OES objects ' .
            '(custom post types). Each object typically includes two internal fields: Status and Comment, intended ' .
            'for editorial or internal communication only.' .
            '</p><p>' .
            'This tool lists all comments in one place, allowing you to quickly review them and jump directly to the ' .
            'related post for editing or review.' .
            '</p><p>' .
            'Use it to streamline internal collaboration and keep track of outstanding notes or issues across your ' .
            'encyclopedia project.</p>',
    ]);

    $screen->set_help_sidebar('<p><strong>See </strong></p><p><a href="https://manual.open-encyclopedia-system.org/">OES Manual</a></p>');
}